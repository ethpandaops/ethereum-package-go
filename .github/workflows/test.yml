name: Test

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.24']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Verify dependencies
      run: go mod verify

    - name: Run go vet
      run: go vet ./...

    - name: Install Kurtosis CLI
      run: |
        echo "deb [trusted=yes] https://apt.fury.io/kurtosis-tech/ /" | sudo tee /etc/apt/sources.list.d/kurtosis.list
        sudo apt update
        sudo apt install kurtosis-cli

    - name: Install Docker
      uses: docker/setup-buildx-action@v3

    - name: Start Kurtosis Engine
      run: |
        kurtosis engine start
        sleep 10
        kurtosis engine status

    - name: Run tests
      run: go test -race -coverprofile=coverage.out ./...

    - name: Run tests with verbose output (on failure)
      if: failure()
      run: go test -v ./...

    - name: Stop Kurtosis Engine
      if: always()
      run: kurtosis engine stop

    - name: Upload coverage to Codecov
      if: matrix.go-version == '1.24'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'

    - name: Run go fmt
      run: |
        fmt_result=$(go fmt ./...)
        if [ -n "$fmt_result" ]; then
          echo "Code is not formatted. Please run 'go fmt ./...'"
          echo "$fmt_result"
          exit 1
        fi

    - name: Run go vet
      run: go vet ./...

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.24']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}

    - name: Build
      run: go build ./...

    - name: Build examples
      run: |
        for dir in examples/*/; do
          if [ -f "$dir/main.go" ]; then
            echo "Building $dir"
            (cd "$dir" && go build .)
          fi
        done